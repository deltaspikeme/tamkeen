package com.tamkeen.backoffice.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PersonalityTestAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonalityTestAllPropertiesEquals(PersonalityTest expected, PersonalityTest actual) {
        assertPersonalityTestAutoGeneratedPropertiesEquals(expected, actual);
        assertPersonalityTestAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonalityTestAllUpdatablePropertiesEquals(PersonalityTest expected, PersonalityTest actual) {
        assertPersonalityTestUpdatableFieldsEquals(expected, actual);
        assertPersonalityTestUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonalityTestAutoGeneratedPropertiesEquals(PersonalityTest expected, PersonalityTest actual) {
        assertThat(expected)
            .as("Verify PersonalityTest auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonalityTestUpdatableFieldsEquals(PersonalityTest expected, PersonalityTest actual) {
        assertThat(expected)
            .as("Verify PersonalityTest relevant properties")
            .satisfies(e -> assertThat(e.getTestName()).as("check testName").isEqualTo(actual.getTestName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonalityTestUpdatableRelationshipsEquals(PersonalityTest expected, PersonalityTest actual) {
        // empty method
    }
}

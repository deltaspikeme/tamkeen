package com.tamkeen.backoffice.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TestResultAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestResultAllPropertiesEquals(TestResult expected, TestResult actual) {
        assertTestResultAutoGeneratedPropertiesEquals(expected, actual);
        assertTestResultAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestResultAllUpdatablePropertiesEquals(TestResult expected, TestResult actual) {
        assertTestResultUpdatableFieldsEquals(expected, actual);
        assertTestResultUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestResultAutoGeneratedPropertiesEquals(TestResult expected, TestResult actual) {
        assertThat(expected)
            .as("Verify TestResult auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestResultUpdatableFieldsEquals(TestResult expected, TestResult actual) {
        assertThat(expected)
            .as("Verify TestResult relevant properties")
            .satisfies(e -> assertThat(e.getAnalysis()).as("check analysis").isEqualTo(actual.getAnalysis()))
            .satisfies(e -> assertThat(e.getResultDate()).as("check resultDate").isEqualTo(actual.getResultDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestResultUpdatableRelationshipsEquals(TestResult expected, TestResult actual) {
        assertThat(expected)
            .as("Verify TestResult relationships")
            .satisfies(e -> assertThat(e.getPersonalityTest()).as("check personalityTest").isEqualTo(actual.getPersonalityTest()))
            .satisfies(e -> assertThat(e.getPersonalityType()).as("check personalityType").isEqualTo(actual.getPersonalityType()));
    }
}

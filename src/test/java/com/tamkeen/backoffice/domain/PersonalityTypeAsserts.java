package com.tamkeen.backoffice.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PersonalityTypeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonalityTypeAllPropertiesEquals(PersonalityType expected, PersonalityType actual) {
        assertPersonalityTypeAutoGeneratedPropertiesEquals(expected, actual);
        assertPersonalityTypeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonalityTypeAllUpdatablePropertiesEquals(PersonalityType expected, PersonalityType actual) {
        assertPersonalityTypeUpdatableFieldsEquals(expected, actual);
        assertPersonalityTypeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonalityTypeAutoGeneratedPropertiesEquals(PersonalityType expected, PersonalityType actual) {
        assertThat(expected)
            .as("Verify PersonalityType auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonalityTypeUpdatableFieldsEquals(PersonalityType expected, PersonalityType actual) {
        assertThat(expected)
            .as("Verify PersonalityType relevant properties")
            .satisfies(e -> assertThat(e.getTypeCode()).as("check typeCode").isEqualTo(actual.getTypeCode()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getStrengths()).as("check strengths").isEqualTo(actual.getStrengths()))
            .satisfies(e -> assertThat(e.getWeaknesses()).as("check weaknesses").isEqualTo(actual.getWeaknesses()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonalityTypeUpdatableRelationshipsEquals(PersonalityType expected, PersonalityType actual) {
        // empty method
    }
}

{
  "name": "tamkeen",
  "version": "0.0.0",
  "private": true,
  "description": "Description for Tamkeen",
  "license": "UNLICENSED",
  "type": "commonjs",
  "scripts": {
    "app:start": "./gradlew",
    "app:up": "docker compose -f src/main/docker/app.yml up --wait",
    "backend:build-cache": "npm run backend:info && npm run backend:nohttp:test && npm run ci:e2e:package -- -x webapp -x webapp_test",
    "backend:doc:test": "./gradlew javadoc -x webapp -x webapp_test",
    "backend:info": "./gradlew -v",
    "backend:nohttp:test": "./gradlew checkstyleNohttp -x webapp -x webapp_test",
    "backend:start": "./gradlew -x webapp -x webapp_test",
    "backend:unit:test": "./gradlew test integrationTest -x webapp -x webapp_test -Dlogging.level.ROOT=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.com.tamkeen.backoffice=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF",
    "build": "npm run webapp:prod --",
    "build-watch": "concurrently 'npm run webapp:build:dev -- --watch' npm:backend:start",
    "ci:backend:test": "npm run backend:info && npm run backend:doc:test && npm run backend:nohttp:test && npm run backend:unit:test -- -P$npm_package_config_default_environment",
    "ci:e2e:package": "npm run java:$npm_package_config_packaging:$npm_package_config_default_environment -- -Pe2e -Denforcer.skip=true",
    "postci:e2e:package": "cp build/libs/*.$npm_package_config_packaging e2e.$npm_package_config_packaging",
    "ci:e2e:prepare": "npm run ci:e2e:prepare:docker",
    "ci:e2e:prepare:docker": "npm run services:up --if-present && docker ps -a",
    "preci:e2e:server:start": "npm run services:db:await --if-present && npm run services:others:await --if-present",
    "ci:e2e:server:start": "java -jar e2e.$npm_package_config_packaging --spring.profiles.active=e2e,$npm_package_config_default_environment -Dlogging.level.ROOT=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.com.tamkeen.backoffice=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF --logging.level.org.springframework.web=ERROR",
    "ci:e2e:teardown": "npm run ci:e2e:teardown:docker --if-present",
    "ci:e2e:teardown:docker": "docker compose -f src/main/docker/services.yml down -v && docker ps -a",
    "ci:frontend:build": "npm run webapp:build:$npm_package_config_default_environment",
    "ci:frontend:test": "npm run ci:frontend:build && npm test",
    "ci:server:await": "echo \"Waiting for server at port $npm_package_config_backend_port to start\" && wait-on -t 180000 http-get://127.0.0.1:$npm_package_config_backend_port/management/health && echo \"Server at port $npm_package_config_backend_port started\"",
    "clean-www": "rimraf build/resources/main/static/",
    "cleanup": "rimraf build/",
    "docker:db:down": "docker compose -f src/main/docker/mongodb.yml down -v",
    "docker:db:up": "docker compose -f src/main/docker/mongodb.yml up --wait",
    "docker:elasticsearch:down": "docker compose -f src/main/docker/elasticsearch.yml down -v",
    "docker:elasticsearch:up": "docker compose -f src/main/docker/elasticsearch.yml up --wait",
    "docker:kafka:down": "docker compose -f src/main/docker/kafka.yml down -v",
    "docker:kafka:up": "docker compose -f src/main/docker/kafka.yml up --wait",
    "docker:redis:down": "docker compose -f src/main/docker/redis.yml down -v",
    "docker:redis:up": "docker compose -f src/main/docker/redis.yml up --wait",
    "java:docker": "./gradlew bootJar -Pprod jibDockerBuild",
    "java:docker:arm64": "npm run java:docker -- -PjibArchitecture=arm64",
    "java:docker:dev": "npm run java:docker -- -Pdev,webapp",
    "java:docker:prod": "npm run java:docker -- -Pprod",
    "java:jar": "./gradlew bootJar -x test -x integrationTest",
    "java:jar:dev": "npm run java:jar -- -Pdev,webapp",
    "java:jar:prod": "npm run java:jar -- -Pprod",
    "java:war": "./gradlew bootWar -Pwar -x test -x integrationTest",
    "java:war:dev": "npm run java:war -- -Pdev,webapp",
    "java:war:prod": "npm run java:war -- -Pprod",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "prepare": "husky",
    "prettier:check": "prettier --check \"{,src/**/,.blueprint/**/}*.{md,json,yml,js,cjs,mjs,ts,cts,mts,java,html,vue,css,scss}\"",
    "prettier:format": "prettier --write \"{,src/**/,.blueprint/**/}*.{md,json,yml,js,cjs,mjs,ts,cts,mts,java,html,vue,css,scss}\"",
    "serve": "npm run start --",
    "services:up": "docker compose -f src/main/docker/services.yml up --wait",
    "start": "npm run webapp:dev --",
    "start-tls": "npm run webapp:dev -- --env.tls",
    "pretest": "npm run lint",
    "test": "npm run vitest-run --",
    "test:watch": "npm run vitest",
    "vite-build": "vite build",
    "vite-serve": "vite",
    "vitest": "vitest",
    "vitest-run": "vitest --run --coverage",
    "watch": "concurrently npm:start npm:backend:start",
    "webapp:build": "npm run clean-www && npm run webapp:build:dev --",
    "webapp:build:dev": "npm run vite-build",
    "webapp:build:prod": "npm run vite-build",
    "webapp:dev": "npm run vite-serve",
    "webapp:prod": "npm run clean-www && npm run webapp:build:prod --",
    "webapp:serve": "npm run vite-serve",
    "webapp:test": "npm run test --"
  },
  "config": {
    "backend_port": 8080,
    "default_environment": "prod",
    "packaging": "jar"
  },
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "not ie <= 8"
  ],
  "dependencies": {
    "@fortawesome/fontawesome-svg-core": "6.6.0",
    "@fortawesome/free-solid-svg-icons": "6.6.0",
    "@fortawesome/vue-fontawesome": "3.0.8",
    "@stomp/rx-stomp": "^2.0.0",
    "@stomp/stompjs": "^7.0.0",
    "@vue/compat": "3.5.6",
    "@vuelidate/core": "2.0.3",
    "@vuelidate/validators": "2.0.4",
    "@vueuse/core": "11.1.0",
    "axios": "1.7.7",
    "bootstrap": "4.6.2",
    "bootstrap-vue": "2.23.1",
    "dayjs": "1.11.13",
    "deepmerge": "4.3.1",
    "js-cookie": "3.0.5",
    "pinia": "2.2.2",
    "rxjs": "7.8.1",
    "sockjs-client": "1.6.1",
    "uuid": "^10.0.0",
    "vue": "3.5.6",
    "vue-i18n": "10.0.1",
    "vue-router": "4.4.5"
  },
  "devDependencies": {
    "@eslint/js": "9.10.0",
    "@pinia/testing": "0.1.5",
    "@tsconfig/node18": "18.2.4",
    "@types/node": "20.11.25",
    "@types/sinon": "17.0.3",
    "@vitejs/plugin-vue": "5.1.4",
    "@vitest/coverage-v8": "2.1.1",
    "@vue/test-utils": "2.4.6",
    "@vue/tsconfig": "0.5.1",
    "autoprefixer": "10.4.20",
    "axios-mock-adapter": "2.0.0",
    "concurrently": "9.0.1",
    "eslint": "9.10.0",
    "eslint-config-prettier": "9.1.0",
    "eslint-plugin-prettier": "5.2.1",
    "eslint-plugin-vue": "9.28.0",
    "flush-promises": "1.0.2",
    "generator-jhipster": "8.7.1",
    "happy-dom": "14.12.3",
    "husky": "9.1.6",
    "lint-staged": "15.2.10",
    "numeral": "2.0.6",
    "postcss-import": "16.1.0",
    "postcss-url": "10.1.3",
    "prettier": "3.3.3",
    "prettier-plugin-java": "2.6.4",
    "prettier-plugin-packagejson": "2.5.2",
    "rimraf": "5.0.8",
    "sass": "1.79.2",
    "sinon": "19.0.2",
    "swagger-ui-dist": "5.17.14",
    "typescript": "5.6.2",
    "typescript-eslint": "8.6.0",
    "vite": "5.4.6",
    "vite-plugin-static-copy": "1.0.6",
    "vitest": "2.1.1",
    "vitest-sonar-reporter": "2.0.0",
    "wait-on": "8.0.1"
  },
  "engines": {
    "node": ">=20.17.0",
    "npm": ">= 6.14.4"
  },
  "cacheDirectories": [
    "node_modules"
  ]
}
